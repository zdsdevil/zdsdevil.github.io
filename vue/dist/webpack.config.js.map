{"version":3,"sources":["../webpack.config.js"],"names":["path","require","webpack","module","exports","entry","output","resolve","__dirname","publicPath","filename","rules","test","loader","options","loaders","exclude","name","alias","devServer","historyApiFallback","noInfo","performance","hints","devtool","process","env","NODE_ENV","plugins","concat","DefinePlugin","optimize","UglifyJsPlugin","sourceMap","compress","warnings","LoaderOptionsPlugin","minimize"],"mappings":";;AAAA,IAAIA,OAAOC,QAAQ,MAAR,CAAX;AACA,IAAIC,UAAUD,QAAQ,SAAR,CAAd;;AAEAE,OAAOC,OAAP,GAAiB;AACfC,SAAO,eADQ;AAEfC,UAAQ;AACNN,UAAMA,KAAKO,OAAL,CAAaC,SAAb,EAAwB,QAAxB,CADA;AAENC,gBAAY,QAFN;AAGNC,cAAU;AAHJ,GAFO;AAOfP,UAAQ;AACNQ,WAAO,CACL;AACEC,YAAM,QADR;AAEEC,cAAQ,YAFV;AAGEC,eAAS;AACPC,iBAAS;AACP;AACA;AACA;AACA,kBAAQ,yCAJD;AAKP,kBAAQ;AAEV;AAPS,SADF;AAHX,KADK,EAeL;AACEH,YAAM,OADR;AAEEC,cAAQ,cAFV;AAGEG,eAAS;AAHX,KAfK,EAoBL;AACEJ,YAAM,sBADR;AAEEC,cAAQ,aAFV;AAGEC,eAAS;AACPG,cAAM;AADC;AAHX,KApBK;AADD,GAPO;AAqCfV,WAAS;AACPW,WAAO;AACL,cAAQ;AADH;AADA,GArCM;AA0CfC,aAAW;AACTC,wBAAoB,IADX;AAETC,YAAQ;AAFC,GA1CI;AA8CfC,eAAa;AACXC,WAAO;AADI,GA9CE;AAiDfC,WAAS;AAjDM,CAAjB;;AAoDA,IAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCxB,SAAOC,OAAP,CAAeoB,OAAf,GAAyB,aAAzB;AACA;AACArB,SAAOC,OAAP,CAAewB,OAAf,GAAyB,CAACzB,OAAOC,OAAP,CAAewB,OAAf,IAA0B,EAA3B,EAA+BC,MAA/B,CAAsC,CAC7D,IAAI3B,QAAQ4B,YAAZ,CAAyB;AACvB,mBAAe;AACbH,gBAAU;AADG;AADQ,GAAzB,CAD6D,EAM7D,IAAIzB,QAAQ6B,QAAR,CAAiBC,cAArB,CAAoC;AAClCC,eAAW,IADuB;AAElCC,cAAU;AACRC,gBAAU;AADF;AAFwB,GAApC,CAN6D,EAY7D,IAAIjC,QAAQkC,mBAAZ,CAAgC;AAC9BC,cAAU;AADoB,GAAhC,CAZ6D,CAAtC,CAAzB;AAgBD","file":"webpack.config.js","sourcesContent":["var path = require('path')\nvar webpack = require('webpack')\n\nmodule.exports = {\n  entry: './src/main.js',\n  output: {\n    path: path.resolve(__dirname, './dist'),\n    publicPath: '/dist/',\n    filename: 'build.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: {\n          loaders: {\n            // Since sass-loader (weirdly) has SCSS as its default parse mode, we map\n            // the \"scss\" and \"sass\" values for the lang attribute to the right configs here.\n            // other preprocessors should work out of the box, no loader config like this necessary.\n            'scss': 'vue-style-loader!css-loader!sass-loader',\n            'sass': 'vue-style-loader!css-loader!sass-loader?indentedSyntax'\n          }\n          // other vue-loader options go here\n        }\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/\n      },\n      {\n        test: /\\.(png|jpg|gif|svg)$/,\n        loader: 'file-loader',\n        options: {\n          name: '[name].[ext]?[hash]'\n        }\n      }\n    ]\n  },\n  resolve: {\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js'\n    }\n  },\n  devServer: {\n    historyApiFallback: true,\n    noInfo: true\n  },\n  performance: {\n    hints: false\n  },\n  devtool: '#eval-source-map'\n}\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports.devtool = '#source-map'\n  // http://vue-loader.vuejs.org/en/workflow/production.html\n  module.exports.plugins = (module.exports.plugins || []).concat([\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: '\"production\"'\n      }\n    }),\n    new webpack.optimize.UglifyJsPlugin({\n      sourceMap: true,\n      compress: {\n        warnings: false\n      }\n    }),\n    new webpack.LoaderOptionsPlugin({\n      minimize: true\n    })\n  ])\n}\n"]}